resources:
  repositories:
  - repository: self
    checkoutOptions:
      submodules: recursive

jobs:

- job: 'test'
  strategy:
    matrix:
      # Linux
      linux_python_27:
        PYTHON_VERSION: '2.7'
        imageName: 'ubuntu-16.04'
      linux_python_35:
        PYTHON_VERSION: '3.5'
        imageName: 'ubuntu-16.04'
      linux_python_36:
        PYTHON_VERSION: '3.6'
        imageName: 'ubuntu-16.04'
      linux_python_37:
        PYTHON_VERSION: '3.7'
        imageName: 'ubuntu-16.04'
      # Mac
      mac_python_27:
        PYTHON_VERSION: '2.7'
        imageName: 'macos-10.13'
      mac_python_35:
        PYTHON_VERSION: '3.5'
        imageName: 'macos-10.13'
      mac_python_36:
        PYTHON_VERSION: '3.6'
        imageName: 'macos-10.13'
      mac_python_37:
        PYTHON_VERSION: '3.7'
        imageName: 'macos-10.13'

      # Windows
      windows_python_27:
        PYTHON_VERSION: '2.7'
        imageName: 'vs2017-win2016'
      windows_python_35:
        PYTHON_VERSION: '3.5'
        imageName: 'vs2017-win2016'
      windows_python_36:
        PYTHON_VERSION: '3.6'
        imageName: 'vs2017-win2016'
      windows_python_37:
        PYTHON_VERSION: '3.7'
        imageName: 'vs2017-win2016'

    maxParallel: 10

  pool:
  vmImage: $(imageName)

  steps:
    # Add anaconda to path
    - bash: echo "##vso[task.prependpath]/usr/share/miniconda/bin"
      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: 'Add conda to PATH'

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      condition: eq( variables['Agent.OS'], 'Darwin' )
      displayName: 'Add conda to PATH'

    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      condition: eq( variables['Agent.OS'], 'Windows_NT' )
      displayName: 'Add conda to PATH'


    # Take ownership of conda installation directory
    - bash: sudo chown -R $USER /usr/share/miniconda
      displayName: 'Take ownership of conda installation'
      condition: eq( variables['Agent.OS'], 'Linux' )

    - bash: sudo chown -R $USER $CONDA
      displayName: 'Take ownership of conda installation'
      condition: eq( variables['Agent.OS'], 'Darwin' )

    - script: |
        conda config --set always_yes yes --set changeps1 no --set auto_update_conda no
        conda install conda conda-verify conda-build
        conda build conda-recipe --python=$PYTHON_VERSION
      displayName: 'Create and test conda recipe'


  # steps:
  # - task: UsePythonVersion@0
  #   inputs:
  #     versionSpec: '$(python.version)'
  #     architecture: 'x64'
  #
  # - script: python -m pip install --upgrade pip && pip install -r requirements.txt
  #   displayName: 'Install dependencies'
  #
  # - script: |
  #     pip install pytest
  #     pytest tests --doctest-modules --junitxml=junit/test-results.xml
  #   displayName: 'pytest'
  #
  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/test-results.xml'
  #     testRunTitle: 'Python $(python.version)'
  #   condition: succeededOrFailed()

# - job: 'Publish'
#   dependsOn: 'Test'
#   pool:
#     vmImage: 'Ubuntu-16.04'
#
#   steps:
#   - task: UsePythonVersion@0
#     inputs:
#       versionSpec: '3.x'
#       architecture: 'x64'
#
#   - script: python setup.py sdist
#     displayName: 'Build sdist'
#

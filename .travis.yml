language: C

services:
  - docker

os:
  - linux
  - osx

# Linux distro
# dist: xenial

addons:
  homebrew:
    packages:
    - cmake
  apt:
    packages:
    - cmake

sudo: required

env:
  global:
    # ANACONDA_TOKEN
    - secure: "doZox+m92r02SdGWU1+Oy7LOc9c/4fRqqoffDDcDC7yAMZZPfx1PIVxxZTyIo8tzLzKQn3VOjIAhC/0HfisI51oKbBbIaJMpLnENgAgCOM43Zg1BLl1rgBFPLabSKWuGgHYZHwUAexLlaiPH5bjUfkCBcLN9MSK8n6yo1kHoY5F0jXLu0Rl5IN4CzwZPLJLY59oVollpC1kYQLntDvzvtvCqXzmxIfQ7fTGCIFGur6ZyBQVisOmOMAAYxnNQ4D3qu0A2bSV6o64cXRl2Uosek8xcscuZjhAlXVwONJHQLSPNLQt9wfRvu7qiZTW0oS0PmYtcy0XcNVh4KuwTjYJGP5f0Knh0LAmnUN6L944XsMShbrbXKIff3T2MPG9Nvi6rtJLE/EmLmyuvY8PbPskHOt6yIH9UhrWAuRQBVjnZIAAE3WSHuf9/abutm7ML5y23vbFnu5VG2KJjCvxKAFm3fbedS4VbkbYKACGFo+f4PbDXbJXMalM0E78j4GQMdSgapRyAbSKLInBIOwNO8+mlktyLBsbphnWJBdXSdU6W31ExObLktg8ApZqrT5U/OvJuXWOWJOYsYTI3j2mx12N4rhA9sT+EWfJklv+TgzUqNQA+feMkK2s97sz3dmzPhJ3xno7y77FzQNBs83x9WHAXDdrPxFbcXNGiep/oRiK6s9w="
    # PYPI password
    - secure: "vZJaqioDHch3a9aM0B9BLBO4WByW+iFeGeOgG5r9Rl7bPNI0ZQCw/Y8M31VPLqejU56YUV6oq5EtNYkP+DDo8yVNM57EWVlKjGtF0MIDkUtj4XpJiNPD2K7Sem4h3mMvX5ifSnx2WJq9IyqC0lAsK2wI6rWMPQdijikzBxmDEPFTSAp9EA6KXxXYioB+Ezr/wTv8jGp2+WvYLcv7TRTN3TrQHCsfKhjj5TQ0aAs1TGuPXQ7uV1yLBg4FgztY9NCndCMxzP7RK/AyzIfo67O9cBE3IUgNvnxNbnWn6K+DqbCovR2uDrWvLH7zbfketf/9d06tjrt1KK2aVLNj/81Ul7aYYoLMNOc+EnbTJ5VgWh4+xbXvHWSk38jAm8FwPp2ZPwyKFSgmMxbZm5mTbe14DBos26QqHVEHEskY7cJ9tcZ2POX2DzI8GIxGDU57k6JWU1j2sknuCdCcN9cusDnw4cuVxWCpCB+18LlqYR7bkz5tz78ATBjHRfnzfsSHWDQggiry1Ba5x8KIjwDxJTKjcxhAWsu2rzzmtnTaiTZK82WWdwJhRZjCZK6zQbs1JoD7n01cEgT2Gr4MkFeY9D+BNdYHULq1ygMSEnS7PmISapmueYAepIpgXvW3E0u/DURHG1UuK0/y3KFm1CCcUNyRu6STE6VgD4zFpRkkp+Xl4Dc="
    - WHEELS_PLATFORM="manylinux1_x86_64"
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.6
    - PYTHON_VERSION=3.7

install:
  # # Install CMake
  # mkdir ${TRAVIS_BUILD_DIR}/deps/;
  # if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
  #     mkdir cmake && wget --quiet -O - http://www.cmake.org/files/v3.7/cmake-3.7.1-Linux-x86_64.tar.gz | tar --strip-components=1 -xz -C cmake;
  #     export PATH=${TRAVIS_BUILD_DIR}/deps/cmake/bin:${PATH};
  # else
  #    brew update;
  #    brew install cmake;
  # fi
  # cmake --version
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    else
        wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source $HOME/miniconda/bin/activate
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda no
  - conda create -n testenv python=$PYTHON_VERSION pytest numpy cmake
  - source activate testenv
  - conda install conda conda-verify conda-build anaconda-client twine
  - conda info -a
  # Add MKL shared libraries (for MKL pardiso) to the path
  - |
    MKL_PARDISO_LIB_DIR=`python -c 'import numpy.distutils.system_info as sysinfo; print(sysinfo.get_info("mkl")["library_dirs"][0])'`
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}$:{MKL_PARDISO_LIB_DIR}
    # else if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    #     export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${MKL_PARDISO_LIB_DIR}
    # fi
    fi
  - |
    # Install MacOSX SDK (needed for conda compiler)
    cd /var/tmp; mkdir MacOSX-SDKs; cd MacOSX-SDKs;
    wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.9.sdk.tar.xz
    tar -xf ./MacOSX10.9.sdk.tar.xz
    rm MacOSX10.9.sdk.tar.xz; cd ${TRAVIS_BUILD_DIR}

script:
  # Build and test conda
  - conda build conda-recipe --python=$PYTHON_VERSION --output-folder conda-bld


deploy:
  # Anaconda
  - provider: script
    script: bash $TRAVIS_BUILD_DIR/ci/travis/deploy.sh 
    skip_cleanup: true
    on:
      all_branches: true
    #   tags: true
